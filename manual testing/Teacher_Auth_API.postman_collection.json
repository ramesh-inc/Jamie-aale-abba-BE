{
	"info": {
		"_postman_id": "a7b8c9d0-e1f2-4567-8901-234567890abc",
		"name": "Teacher Authentication API",
		"description": "Collection for testing teacher login and password change endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Teacher Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access');",
									"    pm.expect(jsonData).to.have.property('refresh');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Store tokens for subsequent requests",
									"    pm.environment.set('access_token', jsonData.access);",
									"    pm.environment.set('refresh_token', jsonData.refresh);",
									"    pm.environment.set('user_id', jsonData.user.id);",
									"});",
									"",
									"pm.test(\"User is a teacher\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.user_type).to.eql('teacher');",
									"});",
									"",
									"pm.test(\"Check if password change is required\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.user.teacher_profile && jsonData.user.teacher_profile.password_change_required) {",
									"        pm.environment.set('password_change_required', 'true');",
									"        console.log('Password change required for this teacher');",
									"    } else {",
									"        pm.environment.set('password_change_required', 'false');",
									"        console.log('Password change not required');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{teacher_email}}\",\n    \"password\": \"{{teacher_password}}\",\n    \"user_type\": \"teacher\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Teacher Login - Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error message is present\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('non_field_errors');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"invalid@example.com\",\n    \"password\": \"wrongpassword\",\n    \"user_type\": \"teacher\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Teacher Login - Wrong User Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"User type mismatch error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('user_type_mismatch');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{parent_email}}\",\n    \"password\": \"{{parent_password}}\",\n    \"user_type\": \"teacher\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Password Management",
			"item": [
				{
					"name": "Teacher Change Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if we have an access token",
									"if (!pm.environment.get('access_token')) {",
									"    console.log('No access token found. Please run Teacher Login first.');",
									"    throw new Error('Access token required. Please login first.');",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Password changed successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData.message).to.include('Password changed successfully');",
									"    pm.expect(jsonData.password_change_required).to.eql(false);",
									"});",
									"",
									"// Update environment with new password",
									"pm.environment.set('teacher_password', pm.environment.get('new_teacher_password'));",
									"pm.environment.set('password_change_required', 'false');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"{{teacher_password}}\",\n    \"new_password\": \"{{new_teacher_password}}\",\n    \"confirm_password\": \"{{new_teacher_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/teacher/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"teacher",
								"change-password",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Teacher Change Password - Wrong Current Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Current password error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('current_password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"wrongpassword\",\n    \"new_password\": \"NewSecurePass123!\",\n    \"confirm_password\": \"NewSecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/teacher/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"teacher",
								"change-password",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Teacher Change Password - Password Mismatch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Password mismatch error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('confirm_password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"{{teacher_password}}\",\n    \"new_password\": \"NewSecurePass123!\",\n    \"confirm_password\": \"DifferentPassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/teacher/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"teacher",
								"change-password",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Teacher Change Password - Weak Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Weak password error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('new_password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"{{teacher_password}}\",\n    \"new_password\": \"123\",\n    \"confirm_password\": \"123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/teacher/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"teacher",
								"change-password",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Token Management",
			"item": [
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"New access token received\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access');",
									"    ",
									"    // Update access token",
									"    pm.environment.set('access_token', jsonData.access);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Complete Teacher First Login Flow",
			"item": [
				{
					"name": "1. Login with Initial Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set('access_token', jsonData.access);",
									"    pm.environment.set('refresh_token', jsonData.refresh);",
									"});",
									"",
									"pm.test(\"Password change required\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.user.teacher_profile && jsonData.user.teacher_profile.password_change_required) {",
									"        pm.environment.set('password_change_required', 'true');",
									"        console.log('✓ Password change required - as expected for first login');",
									"    } else {",
									"        console.log('⚠ Password change not required - teacher may have already changed password');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{teacher_email}}\",\n    \"password\": \"{{teacher_initial_password}}\",\n    \"user_type\": \"teacher\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Password change successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.password_change_required).to.eql(false);",
									"    console.log('✓ Password changed successfully');",
									"});",
									"",
									"// Update environment with new password for future tests",
									"pm.environment.set('teacher_password', pm.environment.get('teacher_new_password'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"{{teacher_initial_password}}\",\n    \"new_password\": \"{{teacher_new_password}}\",\n    \"confirm_password\": \"{{teacher_new_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/teacher/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"teacher",
								"change-password",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Login with New Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login with new password successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set('access_token', jsonData.access);",
									"    pm.environment.set('refresh_token', jsonData.refresh);",
									"    console.log('✓ Login with new password successful');",
									"});",
									"",
									"pm.test(\"Password change no longer required\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.user.teacher_profile) {",
									"        pm.expect(jsonData.user.teacher_profile.password_change_required).to.eql(false);",
									"        console.log('✓ Password change requirement cleared');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{teacher_email}}\",\n    \"password\": \"{{teacher_new_password}}\",\n    \"user_type\": \"teacher\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		}
	]
}